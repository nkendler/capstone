program architecture
------------------------

class: core
- what functions in ece496.h do we need in core or move to others?

class: drone
- how to keep data abt orders [can decide after meeting w/ aerlift] - data structure, size, etc
- general station specific functions

class: ground
- need to figure out CLI first, then draw logic diagram
- general station specific functions

class: hospital
[cant do until meeting w/ aerlift]


packet encoding
-------------------
[cant do until meeting w/ aerlift]

cli 
-------------------
- decide what platform
- how it connects to board
- i/o b/w board and cli

hospital db
------------------
[cant do until meeting w/ aerlift]

ground logic
------------------
- figure out what needs to be decided now or can be a var (time out, etc)
- how to send orders to drone (entire handshake decisions) -- drawio

drone logic
-----------------
- handshake decisions b/w drone and ground -- drawio
- things like timeout/power consumption -- do we do this now or edit based on testing? -- have some kind of wait in the diagrams or 
architecture somewhere so we have a baseline

hospital logic
-----------------
[cant do until meeting w/ aerlift]



order of decisions
1. logic for drone, ground
2. logic for cli
3. class structure/architecture for all



QUESTIONS FOR AERLIFT   
1. info needed for packet
2. how much they want given over from our work -- if source code, do they need like header definitions for
each file? etc?
3. how long does it take to fullfill orders